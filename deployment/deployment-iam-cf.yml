---

Description: 'Cloudformation stack to setup user permissions for Informant microservices'

Resources:
  AdminGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      Path: '/hackingstudio/informant/'
      Policies:
        - PolicyName: hackingstudio-informant-adminpolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudfront:*'
                  - 'apigateway:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'logs:*'
                  - 'lambda:*'
                  - 'route53:*'
                  - 'cloudformation:*'
                  - 'events:*'
                  - 'acm:*'
                  - 'dynamodb:*'
                  - 'rds:*'
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:CreateAccessKey'
                  - 'iam:DeleteAccessKey'
                  - 'iam:GetAccessKeyLastUsed'
                  - 'iam:ListAccessKeys'
                  - 'iam:UpdateAccessKey'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:user/hackingstudio/*'
              - Effect: Allow
                Action:
                  - 'iam:GetAccountPasswordPolicy'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 'iam:ListUsers'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'

  AdminGroupUsersMarcus:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName:
        !Ref AdminGroup
      Users:
        - hackingstudio-marcus

  UserPolicyMarcus:
    Type: 'AWS::IAM::Policy'
    Properties:
      Users:
        - hackingstudio-marcus
      PolicyName: 'hackingstudio-marcus-userinline'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'iam:ChangePassword'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/hackingstudio/hackingstudio-marcus'

  AdminGroupUsersJannes:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName:
        !Ref AdminGroup
      Users:
        - hackingstudio-jannes

  UserPolicyJannes:
    Type: 'AWS::IAM::Policy'
    Properties:
      Users:
        - hackingstudio-jannes
      PolicyName: 'hackingstudio-jannes-userinline'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'iam:ChangePassword'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/hackingstudio/hackingstudio-jannes'

  DeployBotGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      Path: '/hackingstudio/informant/'
      Policies:
        - PolicyName: hackingstudio-informant-bot-deploypolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                Resource:
                  - !Sub 'arn:aws:cloudformation:eu-central-1:${AWS::AccountId}:stack/hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucket'
                  - 's3:ListBucketVersions'
                  - 's3:PutAccelerateConfiguration'
                Resource:
                  - !Sub 'arn:aws:s3:::hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::hackingstudio-informant-bot-*/*'
              - Effect: Allow
                Action:
                  - 'lambda:AddPermission'
                  - 'lambda:GetFunction'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteFunction'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:PublishVersion'
                  - 'lambda:CreateAlias'
                  - 'lambda:DeleteAlias'
                  - 'lambda:UpdateAlias'
                  - 'lambda:GetFunctionConfiguration'
                Resource:
                  - !Sub 'arn:aws:lambda:eu-central-1:${AWS::AccountId}:function:hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                  - 'events:Put*'
                  - 'events:Remove*'
                  - 'events:Delete*'
                  - 'events:Describe*'
                Resource:
                  - !Sub 'arn:aws:events:eu-central-1:${AWS::AccountId}:rule/hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                  - 'apigateway:GET'
                  - 'apigateway:POST'
                  - 'apigateway:PUT'
                  - 'apigateway:DELETE'
                Resource:
                  - 'arn:aws:apigateway:eu-central-1::/*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DeleteLogGroup'
                  - 'logs:DeleteLogStream'
                  - 'logs:DescribeLogStreams'
                  - 'logs:FilterLogEvents'
                  - 'logs:PutMetricFilter'
                Resource:
                  - !Sub 'arn:aws:logs:eu-central-1:${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-bot-*:*'
              - Effect: Allow
                Action:
                  - 'logs:DescribeLogGroups'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteTable'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:UpdateTable'
                Resource:
                  - !Sub 'arn:aws:dynamodb:eu-central-1:${AWS::AccountId}:table/hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                  - 'dynamodb:ListTables'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/hackingstudio/informant/hackingstudio-informant-bot-functions'
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: '*'
              - Effect: Allow
                Action:
                  - acm:ListCertificates
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                Resource: !Sub arn:aws:route53:::hostedzone/Z1VSY3KEFJ69PM
              - Effect: Allow
                Action:
                - 'states:CreateStateMachine'
                Resource:
                - !Sub 'arn:aws:states:eu-central-1:${AWS::AccountId}:stateMachine:hackingstudio-informant-bot-*'
              - Effect: Allow
                Action:
                - 'states:DescribeStateMachine'
                - 'states:DeleteStateMachine'
                - 'states:UpdateStateMachine'
                Resource:
                - !Sub 'arn:aws:states:eu-central-1:${AWS::AccountId}:stateMachine:hackingstudio-informant-bot-*'

  DeployBotUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path: '/hackingstudio/informant/'
      UserName: hackingstudio-informant-bot-deploy
      Groups:
        - !Ref DeployBotGroup

  BotFunctionsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: '/hackingstudio/informant/'
      RoleName: hackingstudio-informant-bot-functions
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Principal:
              Service: 'lambda.amazonaws.com'
            Effect: Allow
      Policies:
        - PolicyName: hackingstudio-informant-bot-functionsrole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                Resource:
                  - !Sub 'arn:aws:logs::${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-bot-*:*'
                Effect: Allow
              - Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs::${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-bot-*:*:*'
                Effect: Allow
              - Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - !Sub 'arn:aws:dynamodb:eu-central-1:${AWS::AccountId}:table/hackingstudio-informant-bot-*'
                Effect: Allow

  DeployAmpGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      Path: '/hackingstudio/informant/'
      Policies:
        - PolicyName: hackingstudio-informant-amp-deploypolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                Resource:
                  - !Sub 'arn:aws:cloudformation:eu-central-1:${AWS::AccountId}:stack/hackingstudio-informant-amp-*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:DeleteBucketWebsite'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:GetBucketWebsite'
                  - 's3:ListBucket'
                  - 's3:ListBucketVersions'
                  - 's3:PutAccelerateConfiguration'
                  - 's3:PutBucketAcl'
                  - 's3:PutBucketWebsite'
                Resource:
                  - !Sub 'arn:aws:s3:::hackingstudio-informant-amp-*'
              - Effect: Allow
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::hackingstudio-informant-amp-*/*'
              - Effect: Allow
                Action:
                  - 'lambda:AddPermission'
                  - 'lambda:GetFunction'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteFunction'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:PublishVersion'
                  - 'lambda:CreateAlias'
                  - 'lambda:DeleteAlias'
                  - 'lambda:UpdateAlias'
                  - 'lambda:GetFunctionConfiguration'
                Resource:
                  - !Sub 'arn:aws:lambda:eu-central-1:${AWS::AccountId}:function:hackingstudio-informant-amp-*'
              - Effect: Allow
                Action:
                  - 'events:Put*'
                  - 'events:Remove*'
                  - 'events:Delete*'
                  - 'events:Describe*'
                Resource:
                  - !Sub 'arn:aws:events:eu-central-1:${AWS::AccountId}:rule/hackingstudio-informant-amp-*'
              - Effect: Allow
                Action:
                  - 'apigateway:GET'
                  - 'apigateway:POST'
                  - 'apigateway:PUT'
                  - 'apigateway:DELETE'
                Resource:
                  - 'arn:aws:apigateway:eu-central-1::/*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:DeleteLogGroup'
                Resource:
                  - !Sub 'arn:aws:logs:eu-central-1:${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-amp-*:*'
              - Effect: Allow
                Action:
                  - 'logs:DescribeLogGroups'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/hackingstudio/informant/hackingstudio-informant-amp-functions'
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: '*'
              - Effect: Allow
                Action:
                  - acm:ListCertificates
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                Resource: !Sub arn:aws:route53:::hostedzone/Z1VSY3KEFJ69PM

  DeployAmpUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path: '/hackingstudio/informant/'
      UserName: hackingstudio-informant-amp-deploy
      Groups:
        - !Ref DeployAmpGroup

  AmpFunctionsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: '/hackingstudio/informant/'
      RoleName: hackingstudio-informant-amp-functions
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Principal:
              Service: 'lambda.amazonaws.com'
            Effect: Allow
      Policies:
        - PolicyName: hackingstudio-informant-amp-functionsrole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                Resource:
                  - !Sub 'arn:aws:logs::${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-amp-*:*'
                Effect: Allow
              - Action:
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs::${AWS::AccountId}:log-group:/aws/lambda/hackingstudio-informant-amp-*:*:*'
                Effect: Allow
              - Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                Resource:
                  - !Sub 'arn:aws:s3:::hackingstudio-informant-amp-*/*'
                Effect: Allow
